#           _     _       _ 
#  _____  _| |__ | | ____| |
# / __\ \/ / '_ \| |/ / _` |
# \__ \>  <| | | |   < (_| |
# |___/_/\_\_| |_|_|\_\__,_|
                          

#
# wm independent hotkeys
#

#Power Menu
super + @Delete
        $HOME/.config/rofi/powermenu/powermenu.sh

# lock screen
super + j 
    betterlockscreen -l 
# turn off bluetooth

super + b
	bluetoothctl power off
    
# terminal emulator
super + Return
	alacritty
  
# nvim launcher 
super + n
	nvim
# program launcher
super + space
	$HOME/.config/rofi/launchers/text/launcher.sh

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd

XF86Calculator
        bluetoothctl power on

XF86Calculator + shift
        bluetoothctl power off

#
# bspwm hotkeys
#

# quit/restart bspwm
super + alt + {q,r}
	bspc {quit,wm -r}

# close and kill
super + {_,shift + }w
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest window
super + g
	bspc node -s biggest.window

#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous window in the current desktop
super + {_,shift + }c
	bspc node -f {next,prev}.local.!hidden.window

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local


# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

super + shift bracketright
        bspc node -d next | bspc desktop -f next
super + shift bracketleft
        bspc node -d prev | bspc desktop -f prev

# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}

# screenshotscreen
# {shift + ,_} Print
  # scrot {--select,_} '%F_%H-%M-%S_$wx$h.png' -e 'xclip -selection clipboard -t image/png -i $f && mv $f ~/Pictures/screenshot/' && notify-send 'Screenshot captured'
#scrot {--select,_} '%F_%H-%M-%S_$wx$h.png' -e 'mv $f ~/vault/screenshots/ ' && notify-send 'Screenshot captured'
#@Print
#  maim "/tmp/$(date +%W.%A)-scrot$(date +%s | tail -c 5).png" && \
#  notify-send -a maim "Took a screenshot (full screen)."
#ctrl + @Print
#  maim -i $(xdotool getactivewindow) "/tmp/$(date +%W.%A)-window$(date +%s | tail -c 5).png" && \
#  notify-send -a maim "Took a screenshot (window)."
#ctrl + shift + @Print
# {shift + ,_} Print
 # maim {-s,_} -c 0.1,0.05,0.3,1 ~/Pictures/screenshot/"$(date +%s).png" && notify-send -a maim "Took a screenshot (area)."
{shift + ,_} Print
  maim {-s,_}| tee ~/Pictures/screenshot/$(date +%F_%H-%M-%S).png | xclip -selection clipboard -t image/png | notify-send 'Screenshot captured'
# Convenient scroll in terminal
alt + shift + {j,k}
  xmatch -x "termite\([0-9]+\)-\+-zsh\([0-9]+\)" && \
    xdotool keyup j k key Page_{Down,Up}

# volume control
XF86AudioLowerVolume
	amixer set Master 5%-

XF86AudioRaiseVolume
	amixer set Master 5%+

XF86AudioMute
	amixer set Master toggle 
XF86AudioMicMute
         amixer set Capture toggle  
# Media Controls

alt + backslash
          playerctl next --player=chromium

alt + bracketright
          playerctl play-pause --player=chromium

alt + bracketleft
          playerctl previous --player=chromium
          alacritty -e python ~/.local/bin/tulyp.py
alt + shift + backslash
          playerctl next --player=ncspot,spotify

alt + shift + bracketright
          playerctl play-pause --player=ncspot,spotify

alt + shift + bracketleft
          playerctl previous --player=ncspot,spotify

XF86AudioNext
          playerctl next --player=ncspot,spotify

XF86Audio{Play,Pause}
          playerctl play-pause --player=ncspot,spotify

XF86AudioPrev
          playerctl previous --player=ncspot,spotify
# brightness control
XF86MonBrightnessDown
	brightnessctl set -c backlight 5%-
XF86MonBrightnessUp
	brightnessctl set -c backlight 5%+
XF86MonBrightnessUp + shift 
        brightnessctl set -c backlight 100%
XF86MonBrightnessDown + shift 
        brightnessctl set -c backlight 15%
# lockscreen
alt + l
       sudo systemctl suspend
# Power Manager

super + XF86Launch4
    ~/.config/rofi/applets/android/powermenu.sh


XF86Launch4
    ~/.config/rofi/applets/android/powermenu.sh

super + backslash
  obsidian

